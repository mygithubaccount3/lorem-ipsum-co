!function(e){var t={};function n(o){if(t[o])return t[o].exports;var r=t[o]={i:o,l:!1,exports:{}};return e[o].call(r.exports,r,r.exports,n),r.l=!0,r.exports}n.m=e,n.c=t,n.d=function(e,t,o){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)n.d(o,r,function(t){return e[t]}.bind(null,r));return o},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="/",n(n.s=21)}({21:function(e,t){Vue.component("comment",{props:["title","body","id"],template:"<div class='grid-item hvr-bounce-in'><p class='item-title'>{{ title }}</p><p class='item-comment'>{{ body }}</p><a href='comment.html' class='item-link hvr-glow' @click='get'>Read more</a><span style='display:none'>{{ id }}</span></div>",methods:{get:function(e){"undefined"!=typeof Storage?(sessionStorage.title=$(e.target).prev().prev().text(),sessionStorage.comment=$(e.target).prev().text(),sessionStorage.id=$(e.target).next().text()):$(".comment__title").append("Your browser does not support storage")}}});new Vue({el:".comments-list__list"});var n=new Vuex.Store({state:[],mutations:{add:function(e,t){e.push(t)}}}),o={url:"https://5cbef81d06a6810014c66193.mockapi.io/api/comments",method:"GET",timeout:0,beforeSend:function(){$('<div class="comments-list__loader"><i class="fa fa-cog" aria-hidden="true"></i></div>').insertAfter(".grid")},complete:function(){$(".comments-list__loader").remove()}};$.ajax(o).done(function(e){$(document).ready(function(){if($.trim(e)){n.commit("add",e);var t='<div class="comments-list__list grid">';n.state[0].forEach(function(e,n,o){t+="<comment title='".concat(e.title,"' body='").concat(e.body,"' id='").concat(e.id,"'></comment>")}),t+="</div>";var o=Vue.compile(t);new Vue({render:o.render,staticRenderFns:o.staticRenderFns}).$mount(".grid")}else $("<p class='comments-list__conclusion' style='text-align: center'>Nothing to show</p>").insertAfter(".grid");$(".grid").masonry({itemSelector:".grid-item",gutter:45})})})}});